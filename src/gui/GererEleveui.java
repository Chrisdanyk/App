/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import dao.ClasseDAO;
import dao.EleveDAO;
import entities.Classe;
import entities.Eleve;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chris dany
 */
public class GererEleveui extends javax.swing.JFrame {

    /**
     * Creates new form GererEleveui
     */
    private List<Eleve> allEleves;
    private List<Classe> allClasses = ClasseDAO.allClasses();

    DefaultTableModel model;
    private Boolean editMode = false;
    private int selectedIndex = 0;

    public GererEleveui() throws SQLException {
        initComponents();
        model = (DefaultTableModel) jTableEleve.getModel();
        loadDataCombobox();
        loadEleve();
        deactivateFields();

    }

    public void loadDataCombobox() throws SQLException {
        for (Classe all : allClasses) {
            jComboBoxEleveClasse.addItem(all.getDesignation());

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldEleveNom = new javax.swing.JTextField();
        jTextFieldElevePostNom = new javax.swing.JTextField();
        jTextFieldEleveGenre = new javax.swing.JTextField();
        jTextFieldEleveDateNaissance = new javax.swing.JTextField();
        jComboBoxEleveClasse = new javax.swing.JComboBox<>();
        jButtonEleveSave = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEleve = new javax.swing.JTable();
        jLabelMessage = new javax.swing.JLabel();
        jButtonMotAjouter = new javax.swing.JButton();
        jButtonMotModifier = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Inserer Eleve"));

        jLabel1.setText("Nom");

        jLabel2.setText("Post Nom");

        jLabel3.setText("Genre");

        jLabel4.setText("date naiss");

        jLabel5.setText("classe");

        jTextFieldEleveNom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEleveNomActionPerformed(evt);
            }
        });

        jComboBoxEleveClasse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxEleveClasseActionPerformed(evt);
            }
        });

        jButtonEleveSave.setText("Enregistrer");
        jButtonEleveSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEleveSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(44, 44, 44)
                        .addComponent(jTextFieldEleveNom))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldElevePostNom)
                            .addComponent(jTextFieldEleveGenre)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonEleveSave)
                            .addComponent(jTextFieldEleveDateNaissance)
                            .addComponent(jComboBoxEleveClasse, 0, 180, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldEleveNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldElevePostNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldEleveGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldEleveDateNaissance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jComboBoxEleveClasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonEleveSave)
                .addContainerGap())
        );

        jTableEleve.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom", "Post Nom", "Genre", "Date naiss", "Classe", "Id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableEleve);

        jLabelMessage.setForeground(new java.awt.Color(51, 204, 0));

        jButtonMotAjouter.setText("Ajouter");
        jButtonMotAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMotAjouterActionPerformed(evt);
            }
        });

        jButtonMotModifier.setText("Modifier");
        jButtonMotModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMotModifierActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabelMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonMotAjouter, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonMotModifier, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonMotAjouter)
                            .addComponent(jButtonMotModifier))))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldEleveNomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEleveNomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEleveNomActionPerformed

    private void jButtonEleveSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEleveSaveActionPerformed
        // TODO add your handling code here:
        ///////

        try {
            if (editMode) {
                // System.out.println("edit mode ==== ");

                //System.out.println("classe id = " + ClasseDAO.getClasseByDesignation(jComboBoxEleveClasse.getSelectedItem().toString()));
                int classeByDesignation = ClasseDAO.getClasseByDesignation(jComboBoxEleveClasse.getSelectedItem().toString());
                ClasseDAO.getClasseByDesignation(jComboBoxEleveClasse.getSelectedItem().toString());
                selectedIndex = jTableEleve.getSelectedRow();
                int selectedRow1 = jTableEleve.getSelectedRow();
                selectedIndex = selectedRow1;
                int ideleve1 = (int) jTableEleve.getValueAt(selectedRow1, 5);
                EleveDAO.modiferEleve(ideleve1, classeByDesignation, jTextFieldEleveNom.getText(), jTextFieldElevePostNom.getText(), jTextFieldEleveGenre.getText(), jTextFieldEleveDateNaissance.getText());
                jLabelMessage.setText("Modification effectué avec succès");
                loadEleve();
            } else {
                //System.out.println(toString);
                EleveDAO.ajouterEleve(jTextFieldEleveNom.getText(), jTextFieldElevePostNom.getText(), jTextFieldEleveGenre.getText(), jTextFieldEleveDateNaissance.getText(), allClasses.get(selectedIndex).getId());
                jLabelMessage.setText("Enregistrement effectué avec succès");
                //model.setNumRows(0);
                loadEleve();
            }
        } catch (SQLException ex) {
            Logger.getLogger(GererEleveui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonEleveSaveActionPerformed

    private void jComboBoxEleveClasseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxEleveClasseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxEleveClasseActionPerformed

    private void jButtonMotAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMotAjouterActionPerformed
        // TODO add your handling code here:
        jLabelMessage.setText("");
        emptyFields();
        editMode = false;
        activateFields();
    }//GEN-LAST:event_jButtonMotAjouterActionPerformed

    private void jButtonMotModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMotModifierActionPerformed
        // TODO add your handling code here:
        selectedIndex = jTableEleve.getSelectedRow();
        jLabelMessage.setText("");

        int selectedRow = jTableEleve.getSelectedRow();

        if (selectedRow != -1) {
            editMode = true;
            activateFields();
            selectedIndex = selectedRow;
            // int selectedColumn = jTableMot.getSelectedColumn();
            jTextFieldEleveNom.setText((String) jTableEleve.getValueAt(selectedRow, 0));
            jTextFieldElevePostNom.setText((String) jTableEleve.getValueAt(selectedRow, 1));
            jTextFieldEleveGenre.setText((String) jTableEleve.getValueAt(selectedRow, 2));
            jTextFieldEleveDateNaissance.setText((String) jTableEleve.getValueAt(selectedRow, 3));
            //  jComboBoxEleveClasse.setSelectedItem(jTableEleve.getValueAt(selectedRow, 4));
            String selectClasseName = String.valueOf(jTableEleve.getValueAt(selectedRow, 4));

            int index = 0;
            for (int i = 0; i < allClasses.size(); i++) {
                if (allClasses.get(i).getDesignation().equals(selectClasseName)) {
                    index = i;
                    break;
                }
            }
            jComboBoxEleveClasse.setSelectedIndex(index);
        } else {
            JOptionPane.showMessageDialog(this, "Selectionnez une ligne svp");
        }

        //  jTextFieldMotEn.setText((String) jTableEleve.getValueAt(selectedRow, 4));
    }//GEN-LAST:event_jButtonMotModifierActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GererEleveui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GererEleveui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GererEleveui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GererEleveui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new GererEleveui().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(GererEleveui.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEleveSave;
    private javax.swing.JButton jButtonMotAjouter;
    private javax.swing.JButton jButtonMotModifier;
    private javax.swing.JComboBox<String> jComboBoxEleveClasse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelMessage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableEleve;
    private javax.swing.JTextField jTextFieldEleveDateNaissance;
    private javax.swing.JTextField jTextFieldEleveGenre;
    private javax.swing.JTextField jTextFieldEleveNom;
    private javax.swing.JTextField jTextFieldElevePostNom;
    // End of variables declaration//GEN-END:variables

    private void emptyFields() {
        jTextFieldEleveDateNaissance.setText("");
        jTextFieldEleveGenre.setText("");
        jTextFieldEleveNom.setText("");
        jTextFieldElevePostNom.setText("");
        jComboBoxEleveClasse.setSelectedIndex(0);
    }

    private void activateFields() {
        jTextFieldEleveDateNaissance.setEnabled(true);
        jTextFieldEleveGenre.setEnabled(true);
        jTextFieldEleveNom.setEnabled(true);
        jTextFieldElevePostNom.setEnabled(true);
        jComboBoxEleveClasse.setEnabled(true);
        jButtonEleveSave.setEnabled(true);

    }

    private void deactivateFields() {
        jTextFieldEleveDateNaissance.setEnabled(false);
        jTextFieldEleveGenre.setEnabled(false);
        jTextFieldEleveNom.setEnabled(false);
        jTextFieldElevePostNom.setEnabled(false);
        jComboBoxEleveClasse.setEnabled(false);
        jButtonEleveSave.setEnabled(false);
    }

    public void loadEleve() throws SQLException {
        model.setNumRows(0);
        allEleves = EleveDAO.allEleves();
        for (Eleve eleve : allEleves) {
            Classe classe = ClasseDAO.getClasseById(eleve.getIdClasse());
            model.addRow(new Object[]{eleve.getNom(), eleve.getPrenom(), eleve.getGenre(), eleve.getDateNaissance(), classe.getDesignation(), eleve.getId()});
        }
    }
}
